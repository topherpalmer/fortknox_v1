{"ast":null,"code":"import { StorageAction } from '@aws-amplify/core/internals/utils';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants.mjs';\nimport '../../utils/client/base.mjs';\nimport '../../utils/client/getObject.mjs';\nimport '../../utils/client/listObjectsV2.mjs';\nimport '../../utils/client/putObject.mjs';\nimport '../../utils/client/createMultipartUpload.mjs';\nimport '../../utils/client/uploadPart.mjs';\nimport '../../utils/client/completeMultipartUpload.mjs';\nimport '../../utils/client/listParts.mjs';\nimport '../../utils/client/abortMultipartUpload.mjs';\nimport '../../utils/client/copyObject.mjs';\nimport { headObject } from '../../utils/client/headObject.mjs';\nimport '../../utils/client/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getProperties = async (amplify, input, action) => {\n  const {\n    options: getPropertiesOptions\n  } = input;\n  const {\n    s3Config,\n    bucket,\n    keyPrefix,\n    identityId\n  } = await resolveS3ConfigAndInput(amplify, getPropertiesOptions);\n  const {\n    inputType,\n    objectKey\n  } = validateStorageOperationInput(input, identityId);\n  const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n  logger.debug(`get properties of ${objectKey} from ${finalKey}`);\n  const response = await headObject({\n    ...s3Config,\n    userAgentValue: getStorageUserAgentValue(action ?? StorageAction.GetProperties)\n  }, {\n    Bucket: bucket,\n    Key: finalKey\n  });\n  const result = {\n    contentType: response.ContentType,\n    size: response.ContentLength,\n    eTag: response.ETag,\n    lastModified: response.LastModified,\n    metadata: response.Metadata,\n    versionId: response.VersionId\n  };\n  return inputType === STORAGE_INPUT_KEY ? {\n    key: objectKey,\n    ...result\n  } : {\n    path: objectKey,\n    ...result\n  };\n};\nexport { getProperties };","map":{"version":3,"names":["getProperties","amplify","input","action","options","getPropertiesOptions","s3Config","bucket","keyPrefix","identityId","resolveS3ConfigAndInput","inputType","objectKey","validateStorageOperationInput","finalKey","STORAGE_INPUT_KEY","logger","debug","response","headObject","userAgentValue","getStorageUserAgentValue","StorageAction","GetProperties","Bucket","Key","result","contentType","ContentType","size","ContentLength","eTag","ETag","lastModified","LastModified","metadata","Metadata","versionId","VersionId","key","path"],"sources":["/Users/cp/Documents/Documents - Christopherâ€™s MacBook Air/Development/React/fortknox_v1/node_modules/@aws-amplify/storage/src/providers/s3/apis/internal/getProperties.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { resolveS3ConfigAndInput, validateStorageOperationInput, } from '../../utils';\nimport { headObject } from '../../utils/client';\nimport { getStorageUserAgentValue } from '../../utils/userAgent';\nimport { logger } from '../../../../utils';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants';\nexport const getProperties = async (amplify, input, action) => {\n    const { options: getPropertiesOptions } = input;\n    const { s3Config, bucket, keyPrefix, identityId } = await resolveS3ConfigAndInput(amplify, getPropertiesOptions);\n    const { inputType, objectKey } = validateStorageOperationInput(input, identityId);\n    const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n    logger.debug(`get properties of ${objectKey} from ${finalKey}`);\n    const response = await headObject({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(action ?? StorageAction.GetProperties),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n    });\n    const result = {\n        contentType: response.ContentType,\n        size: response.ContentLength,\n        eTag: response.ETag,\n        lastModified: response.LastModified,\n        metadata: response.Metadata,\n        versionId: response.VersionId,\n    };\n    return inputType === STORAGE_INPUT_KEY\n        ? { key: objectKey, ...result }\n        : { path: objectKey, ...result };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOY,MAACA,aAAa,GAAG,MAAAA,CAAOC,OAAO,EAAEC,KAAK,EAAEC,MAAM,KAAK;EAC3D,MAAM;IAAEC,OAAO,EAAEC;EAAoB,CAAE,GAAGH,KAAK;EAC/C,MAAM;IAAEI,QAAQ;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAU,CAAE,GAAG,MAAMC,uBAAuB,CAACT,OAAO,EAAEI,oBAAoB,CAAC;EAChH,MAAM;IAAEM,SAAS;IAAEC;EAAS,CAAE,GAAGC,6BAA6B,CAACX,KAAK,EAAEO,UAAU,CAAC;EACjF,MAAMK,QAAQ,GAAGH,SAAS,KAAKI,iBAAiB,GAAGP,SAAS,GAAGI,SAAS,GAAGA,SAAS;EACpFI,MAAM,CAACC,KAAK,CAAE,qBAAoBL,SAAU,SAAQE,QAAS,EAAC,CAAC;EAC/D,MAAMI,QAAQ,GAAG,MAAMC,UAAU,CAAC;IAC9B,GAAGb,QAAQ;IACXc,cAAc,EAAEC,wBAAwB,CAAClB,MAAM,IAAImB,aAAa,CAACC,aAAa;EACtF,CAAK,EAAE;IACCC,MAAM,EAAEjB,MAAM;IACdkB,GAAG,EAAEX;EACb,CAAK,CAAC;EACF,MAAMY,MAAM,GAAG;IACXC,WAAW,EAAET,QAAQ,CAACU,WAAW;IACjCC,IAAI,EAAEX,QAAQ,CAACY,aAAa;IAC5BC,IAAI,EAAEb,QAAQ,CAACc,IAAI;IACnBC,YAAY,EAAEf,QAAQ,CAACgB,YAAY;IACnCC,QAAQ,EAAEjB,QAAQ,CAACkB,QAAQ;IAC3BC,SAAS,EAAEnB,QAAQ,CAACoB;EAC5B,CAAK;EACD,OAAO3B,SAAS,KAAKI,iBAAiB,GAChC;IAAEwB,GAAG,EAAE3B,SAAS;IAAE,GAAGc;EAAM,CAAE,GAC7B;IAAEc,IAAI,EAAE5B,SAAS;IAAE,GAAGc;EAAM,CAAE;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}