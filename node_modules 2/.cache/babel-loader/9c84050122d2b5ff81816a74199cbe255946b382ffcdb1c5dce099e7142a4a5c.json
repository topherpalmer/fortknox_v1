{"ast":null,"code":"import { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { calculateContentMd5 } from '../../utils/md5.mjs';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport '../../../../utils/logger.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants.mjs';\nimport '../../utils/client/base.mjs';\nimport '../../utils/client/getObject.mjs';\nimport '../../utils/client/listObjectsV2.mjs';\nimport { putObject } from '../../utils/client/putObject.mjs';\nimport '../../utils/client/createMultipartUpload.mjs';\nimport '../../utils/client/uploadPart.mjs';\nimport '../../utils/client/completeMultipartUpload.mjs';\nimport '../../utils/client/listParts.mjs';\nimport '../../utils/client/abortMultipartUpload.mjs';\nimport '../../utils/client/copyObject.mjs';\nimport '../../utils/client/headObject.mjs';\nimport '../../utils/client/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get a function the returns a promise to call putObject API to S3.\n *\n * @internal\n */\nconst putObjectJob = (uploadDataInput, abortSignal, totalLength) => async () => {\n  const {\n    options: uploadDataOptions,\n    data\n  } = uploadDataInput;\n  const {\n    bucket,\n    keyPrefix,\n    s3Config,\n    isObjectLockEnabled,\n    identityId\n  } = await resolveS3ConfigAndInput(Amplify, uploadDataOptions);\n  const {\n    inputType,\n    objectKey\n  } = validateStorageOperationInput(uploadDataInput, identityId);\n  const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n  const {\n    contentDisposition,\n    contentEncoding,\n    contentType = 'application/octet-stream',\n    metadata,\n    onProgress\n  } = uploadDataOptions ?? {};\n  const {\n    ETag: eTag,\n    VersionId: versionId\n  } = await putObject({\n    ...s3Config,\n    abortSignal,\n    onUploadProgress: onProgress,\n    userAgentValue: getStorageUserAgentValue(StorageAction.UploadData)\n  }, {\n    Bucket: bucket,\n    Key: finalKey,\n    Body: data,\n    ContentType: contentType,\n    ContentDisposition: contentDisposition,\n    ContentEncoding: contentEncoding,\n    Metadata: metadata,\n    ContentMD5: isObjectLockEnabled ? await calculateContentMd5(data) : undefined\n  });\n  const result = {\n    eTag,\n    versionId,\n    contentType,\n    metadata,\n    size: totalLength\n  };\n  return inputType === STORAGE_INPUT_KEY ? {\n    key: objectKey,\n    ...result\n  } : {\n    path: objectKey,\n    ...result\n  };\n};\nexport { putObjectJob };","map":{"version":3,"names":["putObjectJob","uploadDataInput","abortSignal","totalLength","options","uploadDataOptions","data","bucket","keyPrefix","s3Config","isObjectLockEnabled","identityId","resolveS3ConfigAndInput","Amplify","inputType","objectKey","validateStorageOperationInput","finalKey","STORAGE_INPUT_KEY","contentDisposition","contentEncoding","contentType","metadata","onProgress","ETag","eTag","VersionId","versionId","putObject","onUploadProgress","userAgentValue","getStorageUserAgentValue","StorageAction","UploadData","Bucket","Key","Body","ContentType","ContentDisposition","ContentEncoding","Metadata","ContentMD5","calculateContentMd5","undefined","result","size","key","path"],"sources":["/Users/cp/Documents/Documents - Christopherâ€™s MacBook Air/Development/React/fortknox_v1/node_modules/@aws-amplify/storage/src/providers/s3/apis/uploadData/putObjectJob.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { calculateContentMd5, resolveS3ConfigAndInput, validateStorageOperationInput, } from '../../utils';\nimport { putObject } from '../../utils/client';\nimport { getStorageUserAgentValue } from '../../utils/userAgent';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants';\n/**\n * Get a function the returns a promise to call putObject API to S3.\n *\n * @internal\n */\nexport const putObjectJob = (uploadDataInput, abortSignal, totalLength) => async () => {\n    const { options: uploadDataOptions, data } = uploadDataInput;\n    const { bucket, keyPrefix, s3Config, isObjectLockEnabled, identityId } = await resolveS3ConfigAndInput(Amplify, uploadDataOptions);\n    const { inputType, objectKey } = validateStorageOperationInput(uploadDataInput, identityId);\n    const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n    const { contentDisposition, contentEncoding, contentType = 'application/octet-stream', metadata, onProgress, } = uploadDataOptions ?? {};\n    const { ETag: eTag, VersionId: versionId } = await putObject({\n        ...s3Config,\n        abortSignal,\n        onUploadProgress: onProgress,\n        userAgentValue: getStorageUserAgentValue(StorageAction.UploadData),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        Body: data,\n        ContentType: contentType,\n        ContentDisposition: contentDisposition,\n        ContentEncoding: contentEncoding,\n        Metadata: metadata,\n        ContentMD5: isObjectLockEnabled\n            ? await calculateContentMd5(data)\n            : undefined,\n    });\n    const result = {\n        eTag,\n        versionId,\n        contentType,\n        metadata,\n        size: totalLength,\n    };\n    return inputType === STORAGE_INPUT_KEY\n        ? { key: objectKey, ...result }\n        : { path: objectKey, ...result };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACY,MAACA,YAAY,GAAGA,CAACC,eAAe,EAAEC,WAAW,EAAEC,WAAW,KAAK,YAAY;EACnF,MAAM;IAAEC,OAAO,EAAEC,iBAAiB;IAAEC;EAAI,CAAE,GAAGL,eAAe;EAC5D,MAAM;IAAEM,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,mBAAmB;IAAEC;EAAU,CAAE,GAAG,MAAMC,uBAAuB,CAACC,OAAO,EAAER,iBAAiB,CAAC;EAClI,MAAM;IAAES,SAAS;IAAEC;EAAS,CAAE,GAAGC,6BAA6B,CAACf,eAAe,EAAEU,UAAU,CAAC;EAC3F,MAAMM,QAAQ,GAAGH,SAAS,KAAKI,iBAAiB,GAAGV,SAAS,GAAGO,SAAS,GAAGA,SAAS;EACpF,MAAM;IAAEI,kBAAkB;IAAEC,eAAe;IAAEC,WAAW,GAAG,0BAA0B;IAAEC,QAAQ;IAAEC;EAAU,CAAG,GAAGlB,iBAAiB,IAAI,EAAE;EACxI,MAAM;IAAEmB,IAAI,EAAEC,IAAI;IAAEC,SAAS,EAAEC;EAAS,CAAE,GAAG,MAAMC,SAAS,CAAC;IACzD,GAAGnB,QAAQ;IACXP,WAAW;IACX2B,gBAAgB,EAAEN,UAAU;IAC5BO,cAAc,EAAEC,wBAAwB,CAACC,aAAa,CAACC,UAAU;EACzE,CAAK,EAAE;IACCC,MAAM,EAAE3B,MAAM;IACd4B,GAAG,EAAElB,QAAQ;IACbmB,IAAI,EAAE9B,IAAI;IACV+B,WAAW,EAAEhB,WAAW;IACxBiB,kBAAkB,EAAEnB,kBAAkB;IACtCoB,eAAe,EAAEnB,eAAe;IAChCoB,QAAQ,EAAElB,QAAQ;IAClBmB,UAAU,EAAE/B,mBAAmB,GACzB,MAAMgC,mBAAmB,CAACpC,IAAI,CAAC,GAC/BqC;EACd,CAAK,CAAC;EACF,MAAMC,MAAM,GAAG;IACXnB,IAAI;IACJE,SAAS;IACTN,WAAW;IACXC,QAAQ;IACRuB,IAAI,EAAE1C;EACd,CAAK;EACD,OAAOW,SAAS,KAAKI,iBAAiB,GAChC;IAAE4B,GAAG,EAAE/B,SAAS;IAAE,GAAG6B;EAAM,CAAE,GAC7B;IAAEG,IAAI,EAAEhC,SAAS;IAAE,GAAG6B;EAAM,CAAE;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}