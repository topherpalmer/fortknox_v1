{"ast":null,"code":"import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { isInputWithPath } from './isInputWithPath.mjs';\nimport { STORAGE_INPUT_PATH, STORAGE_INPUT_KEY } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst validateStorageOperationInput = (input, identityId) => {\n  assertValidationError(\n  // Key present without a path\n  !!input.key && !input.path ||\n  // Path present without a key\n  !input.key && !!input.path, StorageValidationErrorCode.InvalidStorageOperationInput);\n  if (isInputWithPath(input)) {\n    const {\n      path\n    } = input;\n    const objectKey = typeof path === 'string' ? path : path({\n      identityId\n    });\n    assertValidationError(!objectKey.startsWith('/'), StorageValidationErrorCode.InvalidStoragePathInput);\n    return {\n      inputType: STORAGE_INPUT_PATH,\n      objectKey\n    };\n  } else {\n    return {\n      inputType: STORAGE_INPUT_KEY,\n      objectKey: input.key\n    };\n  }\n};\nexport { validateStorageOperationInput };","map":{"version":3,"names":["validateStorageOperationInput","input","identityId","assertValidationError","key","path","StorageValidationErrorCode","InvalidStorageOperationInput","isInputWithPath","objectKey","startsWith","InvalidStoragePathInput","inputType","STORAGE_INPUT_PATH","STORAGE_INPUT_KEY"],"sources":["/Users/cp/Documents/Documents - Christopherâ€™s MacBook Air/Development/React/fortknox_v1/node_modules/@aws-amplify/storage/src/providers/s3/utils/validateStorageOperationInput.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { StorageValidationErrorCode } from '../../../errors/types/validation';\nimport { isInputWithPath } from './isInputWithPath';\nimport { STORAGE_INPUT_KEY, STORAGE_INPUT_PATH } from './constants';\nexport const validateStorageOperationInput = (input, identityId) => {\n    assertValidationError(\n    // Key present without a path\n    (!!input.key && !input.path) ||\n        // Path present without a key\n        (!input.key && !!input.path), StorageValidationErrorCode.InvalidStorageOperationInput);\n    if (isInputWithPath(input)) {\n        const { path } = input;\n        const objectKey = typeof path === 'string' ? path : path({ identityId });\n        assertValidationError(!objectKey.startsWith('/'), StorageValidationErrorCode.InvalidStoragePathInput);\n        return {\n            inputType: STORAGE_INPUT_PATH,\n            objectKey,\n        };\n    }\n    else {\n        return { inputType: STORAGE_INPUT_KEY, objectKey: input.key };\n    }\n};\n"],"mappings":";;;;;AAAA;AACA;AAKY,MAACA,6BAA6B,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;EAChEC,qBAAqB;EACzB;EACK,CAAC,CAACF,KAAK,CAACG,GAAG,IAAI,CAACH,KAAK,CAACI,IAAI;EAC/B;EACS,CAACJ,KAAK,CAACG,GAAG,IAAI,CAAC,CAACH,KAAK,CAACI,IAAK,EAAEC,0BAA0B,CAACC,4BAA4B,CAAC;EAC1F,IAAIC,eAAe,CAACP,KAAK,CAAC,EAAE;IACxB,MAAM;MAAEI;IAAI,CAAE,GAAGJ,KAAK;IACtB,MAAMQ,SAAS,GAAG,OAAOJ,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAAC;MAAEH;IAAU,CAAE,CAAC;IACxEC,qBAAqB,CAAC,CAACM,SAAS,CAACC,UAAU,CAAC,GAAG,CAAC,EAAEJ,0BAA0B,CAACK,uBAAuB,CAAC;IACrG,OAAO;MACHC,SAAS,EAAEC,kBAAkB;MAC7BJ;IACZ,CAAS;EACT,CAAK,MACI;IACD,OAAO;MAAEG,SAAS,EAAEE,iBAAiB;MAAEL,SAAS,EAAER,KAAK,CAACG;IAAG,CAAE;EACrE;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}