{"ast":null,"code":"import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { STORAGE_INPUT_PATH, STORAGE_INPUT_PREFIX } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Local assertion function with StorageOperationInputWithPrefixPath as Input\nconst _isInputWithPath = input => {\n  return input.path !== undefined;\n};\nconst validateStorageOperationInputWithPrefix = (input, identityId) => {\n  // Validate prefix & path not present at the same time\n  assertValidationError(!(input.prefix && input.path), StorageValidationErrorCode.InvalidStorageOperationPrefixInput);\n  if (_isInputWithPath(input)) {\n    const {\n      path\n    } = input;\n    const objectKey = typeof path === 'string' ? path : path({\n      identityId\n    });\n    // Assert on no leading slash in the path parameter\n    assertValidationError(!objectKey.startsWith('/'), StorageValidationErrorCode.InvalidStoragePathInput);\n    return {\n      inputType: STORAGE_INPUT_PATH,\n      objectKey\n    };\n  } else {\n    return {\n      inputType: STORAGE_INPUT_PREFIX,\n      objectKey: input.prefix ?? ''\n    };\n  }\n};\nexport { validateStorageOperationInputWithPrefix };","map":{"version":3,"names":["_isInputWithPath","input","path","undefined","validateStorageOperationInputWithPrefix","identityId","assertValidationError","prefix","StorageValidationErrorCode","InvalidStorageOperationPrefixInput","objectKey","startsWith","InvalidStoragePathInput","inputType","STORAGE_INPUT_PATH","STORAGE_INPUT_PREFIX"],"sources":["/Users/cp/Documents/Documents - Christopherâ€™s MacBook Air/Development/React/fortknox_v1/node_modules/@aws-amplify/storage/src/providers/s3/utils/validateStorageOperationInputWithPrefix.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { StorageValidationErrorCode } from '../../../errors/types/validation';\nimport { STORAGE_INPUT_PATH, STORAGE_INPUT_PREFIX } from './constants';\n// Local assertion function with StorageOperationInputWithPrefixPath as Input\nconst _isInputWithPath = (input) => {\n    return input.path !== undefined;\n};\nexport const validateStorageOperationInputWithPrefix = (input, identityId) => {\n    // Validate prefix & path not present at the same time\n    assertValidationError(!(input.prefix && input.path), StorageValidationErrorCode.InvalidStorageOperationPrefixInput);\n    if (_isInputWithPath(input)) {\n        const { path } = input;\n        const objectKey = typeof path === 'string' ? path : path({ identityId });\n        // Assert on no leading slash in the path parameter\n        assertValidationError(!objectKey.startsWith('/'), StorageValidationErrorCode.InvalidStoragePathInput);\n        return {\n            inputType: STORAGE_INPUT_PATH,\n            objectKey,\n        };\n    }\n    else {\n        return { inputType: STORAGE_INPUT_PREFIX, objectKey: input.prefix ?? '' };\n    }\n};\n"],"mappings":";;;;AAAA;AACA;AAIA;AACA,MAAMA,gBAAgB,GAAIC,KAAK,IAAK;EAChC,OAAOA,KAAK,CAACC,IAAI,KAAKC,SAAS;AACnC,CAAC;AACW,MAACC,uCAAuC,GAAGA,CAACH,KAAK,EAAEI,UAAU,KAAK;EAC9E;EACIC,qBAAqB,CAAC,EAAEL,KAAK,CAACM,MAAM,IAAIN,KAAK,CAACC,IAAI,CAAC,EAAEM,0BAA0B,CAACC,kCAAkC,CAAC;EACnH,IAAIT,gBAAgB,CAACC,KAAK,CAAC,EAAE;IACzB,MAAM;MAAEC;IAAI,CAAE,GAAGD,KAAK;IACtB,MAAMS,SAAS,GAAG,OAAOR,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAAC;MAAEG;IAAU,CAAE,CAAC;IAChF;IACQC,qBAAqB,CAAC,CAACI,SAAS,CAACC,UAAU,CAAC,GAAG,CAAC,EAAEH,0BAA0B,CAACI,uBAAuB,CAAC;IACrG,OAAO;MACHC,SAAS,EAAEC,kBAAkB;MAC7BJ;IACZ,CAAS;EACT,CAAK,MACI;IACD,OAAO;MAAEG,SAAS,EAAEE,oBAAoB;MAAEL,SAAS,EAAET,KAAK,CAACM,MAAM,IAAI;IAAE,CAAE;EACjF;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}